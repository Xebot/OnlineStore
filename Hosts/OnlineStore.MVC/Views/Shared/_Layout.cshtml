<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MyApp</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-light">
            <a class="navbar-brand" href="/">MyApp</a>
            @if (User?.Identity?.IsAuthenticated == true && User.IsInRole("Admin"))
            {
                <form asp-controller="Home" asp-action="AddProduct" method="get" class="form-inline">
                    <button type="submit" class="btn btn-danger">
                        Добавить продукт
                    </button>
                </form>
            }            
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    <!-- Иконка корзины с счетчиком -->
                    @* <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Cart")">
                            <span class="fa fa-shopping-cart"></span>
                            Корзина <span id="cart-count" class="badge badge-pill badge-danger">@ViewBag.CartCount</span>
                        </a>
                    </li> *@
                    <button type="button" class="btn btn-success">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart4" viewBox="0 0 16 16">
                            <path d="M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z"></path>
                        </svg>
                        Корзина
                    </button>                    
                </ul>
                <span id="cart-count" class="badge badge-pill badge-danger" style="margin-left: -10px; margin-top: -30px;">0</span>            
            </div>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    @if (User?.Identity?.IsAuthenticated == true)
                    {
                        <li class="nav-item">
                            <form asp-controller="Account" asp-action="Logout" method="post" class="form-inline">
                                <button type="submit" class="btn btn-danger">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-door-open" viewBox="0 0 16 16">
                                        <path d="M8.5 10c-.276 0-.5-.448-.5-1s.224-1 .5-1 .5.448.5 1-.224 1-.5 1z" />
                                        <path d="M10.828.122A.5.5 0 0 1 11 .5V1h.5A1.5 1.5 0 0 1 13 2.5V15h1.5a.5.5 0 0 1 0 1h-13a.5.5 0 0 1 0-1H3V1.5a.5.5 0 0 1 .43-.495l7-1a.5.5 0 0 1 .398.117zM11.5 2H11v13h1V2.5a.5.5 0 0 0-.5-.5zM4 1.934V15h6V1.077l-6 .857z" />
                                    </svg>Выход
                                </button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#loginModal">
                                Вход
                            </button>
                        </li>
                        <li class="nav-item">
                            <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#registerModal">
                                Регистрация
                            </button>
                        </li>
                    }                    
                </ul>
            </div>
        </nav>
    </header>

    <div class="container">
        @RenderBody()
    </div>

    <footer class="footer mt-auto py-3 bg-light">
        <div class="container">
            <span class="text-muted">&copy; 2024 - MyApp</span>
        </div>
    </footer>

    <!-- Модальные окна -->
    <!-- Модальное окно для входа -->
    <div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loginModalLabel">Вход</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="loginFormContainer"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Модальное окно для регистрации -->
    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="registerModalLabel">Регистрация</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="registerFormContainer"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Скрипты -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js"></script>

    <!-- Скрипт для работы модальных окон -->
    <script>
        $(document).ready(function () {
            // Загрузка формы входа
            $('#loginModal').on('show.bs.modal', function () {
                $.get('@Url.Action("Login", "Account")', function (data) {
                    $('#loginFormContainer').html(data);
                });
            });

            // Загрузка формы регистрации
            $('#registerModal').on('show.bs.modal', function () {
                $.get('@Url.Action("Register", "Account")', function (data) {
                    $('#registerFormContainer').html(data);
                });
            });

            // Отправка формы регистрации с обработкой ошибок
            $(document).on('submit', 'form[asp-action="Register"]', function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (result) {
                        // Если в результате есть ошибки, обновляем модальное окно
                        $('#registerFormContainer').html(result);
                    }
                });
            });

            $('.add-to-cart-btn').click(function () {                
                var productId = $(this).data('product-id');
                var isAuthenticated = '@User.Identity.IsAuthenticated' === 'True';
                if (isAuthenticated) {
                    $.post('@Url.Action("AddToCart", "Cart")', { id: productId }, function (response) {
                        alert("Товар добавлен в корзину");

                        // Обновление счетчика корзины
                        $('#cart-count').text(response.cartCount);
                    });
                }
                else{
                    addToLocalStorageCart(productId);
                    alert('Товар добавлен в корзину');
                }                
            });

            // let cart = JSON.parse(localStorage.getItem('cart')) || [];
            // updateCartIcon(cart);

            var isAuthenticated = '@User.Identity.IsAuthenticated' === 'True';

            if (isAuthenticated) {
                // Если пользователь авторизован, делаем асинхронный запрос на сервер для получения количества товаров в корзине
                $.ajax({
                    type: 'GET',
                    url: '/Cart/GetCartItemCount', // URL, который возвращает количество товаров в корзине
                    success: function (response) {
                        // Обновляем счетчик корзины
                        $('#cart-count').text(response.cartItemCount);
                    },
                    error: function (error) {
                        console.error('Ошибка при получении количества товаров в корзине:', error);
                    }
                });
            } 
            else {
                // Если пользователь не авторизован, берем данные из LocalStorage
                var cart = JSON.parse(localStorage.getItem('cart')) || [];
                var totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);

                // Обновляем счетчик корзины
                $('#cart-count').text(totalCount);
            }
        });

        function addToLocalStorageCart(productId) {
            // Получаем текущую корзину из LocalStorage
            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            // Проверяем, есть ли уже этот товар в корзине
            let existingItem = cart.find(item => item.productId === productId);

            if (existingItem) {
                // Если товар уже есть, увеличиваем количество
                existingItem.quantity += 1;
            } else {
                // Если товара нет, добавляем его в корзину
                cart.push({ productId: productId, quantity: 1 });
            }

            // Сохраняем обновленную корзину в LocalStorage
            localStorage.setItem('cart', JSON.stringify(cart));

            // Обновляем счетчик в иконке корзины
            updateCartIcon(cart);
        }

        // Функция для обновления счетчика товаров в корзине на иконке
        function updateCartIcon(cart) {
            let totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);
            $('#cart-count').text(totalCount);
        }

    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
